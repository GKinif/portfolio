name: Elixir CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - uses: actions/checkout@v2

    - name: Cache deps
      uses: actions/cache@v1
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
        restore-keys: |
          ${{ runner.os }}-mix-

    - name: Setup elixir
      uses: actions/setup-elixir@v1
      with:
        elixir-version: 1.9.4
        otp-version: 22.2

    - name: Install Phoenix Dependencies
      run: mix deps.get

    - name: Run Tests
      run: mix test

    - name: Install Node Dependencies
      run: npm install --prefix ./assets

    - name: Compile assets
      run: |
        npm run deploy --prefix ./assets
        mix phx.digest

    - name: Build release
      run: MIX_ENV=prod mix release

    - name: Copy files via scp
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        KEY: ${{ secrets.SSH_KEY }}
      with:
        source: "./_build/prod/rel/portfolio"
        target: "/home/guillaume/app"

    - name: Run migration and start Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        KEY: ${{ secrets.SSH_KEY }}
        script: |
          /home/guillaume/app/_build/prod/rel/portfolio/bin/portfolio stop
          /home/guillaume/app/_build/prod/rel/portfolio/bin/portfolio eval "Portfolio.Release.migrate"
          /home/guillaume/app/_build/prod/rel/portfolio/bin/portfolio daemon
